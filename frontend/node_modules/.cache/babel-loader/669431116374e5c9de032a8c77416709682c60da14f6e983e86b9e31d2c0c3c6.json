{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import\"../styles/AdminFunctionForm.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminFunctionForm=()=>{const[program,setProgram]=useState(\"\");const[event,setEvent]=useState(\"\");const[message,setMessage]=useState(\"\");const[existingPrograms,setExistingPrograms]=useState([]);const[existingEvents,setExistingEvents]=useState([]);// ✅ Fetch existing Programs and Events for duplicate check\nuseEffect(()=>{const fetchData=async()=>{try{const[programRes,eventRes]=await Promise.all([axios.get(\"/api/programs-events/programs\"),axios.get(\"/api/programs-events/events\")]);setExistingPrograms(programRes.data||[]);setExistingEvents(eventRes.data||[]);}catch(error){console.error(\"Error fetching existing programs/events:\",error);}};fetchData();},[]);const handleSubmit=async e=>{e.preventDefault();setMessage(\"\");// ✅ Check for duplicates before submit\nif(existingPrograms.some(p=>p.program_name.toLowerCase()===program.toLowerCase())){setMessage(\"\\u26A0\\uFE0F Program \\\"\".concat(program,\"\\\" already exists.\"));return;}if(existingEvents.some(ev=>ev.event_name.toLowerCase()===event.toLowerCase())){setMessage(\"\\u26A0\\uFE0F Event \\\"\".concat(event,\"\\\" already exists.\"));return;}try{await axios.post(\"/api/programs-events/add\",{program_name:program,event_name:event});setMessage(\"✅ Program & Event added successfully!\");setProgram(\"\");setEvent(\"\");// Refresh local lists after successful add\nconst[programRes,eventRes]=await Promise.all([axios.get(\"/api/programs-events/programs\"),axios.get(\"/api/programs-events/events\")]);setExistingPrograms(programRes.data||[]);setExistingEvents(eventRes.data||[]);}catch(error){console.error(\"Error adding Program & Event:\",error);setMessage(\"❌ Failed to add Program & Event.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"add-program-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin \\u2013 Create New Program & Event\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Program:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:program,onChange:e=>setProgram(e.target.value),required:true,className:\"input-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Event:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:event,onChange:e=>setEvent(e.target.value),required:true,className:\"input-field\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Add Program & Event\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"form-message\",children:message})]});};export default AdminFunctionForm;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","AdminFunctionForm","program","setProgram","event","setEvent","message","setMessage","existingPrograms","setExistingPrograms","existingEvents","setExistingEvents","fetchData","programRes","eventRes","Promise","all","get","data","error","console","handleSubmit","e","preventDefault","some","p","program_name","toLowerCase","concat","ev","event_name","post","className","children","onSubmit","type","value","onChange","target","required"],"sources":["/Users/tejas.shah/Downloads/jsmcrsvp/frontend/src/components/AdminFunctionForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/AdminFunctionForm.css\";\n\nconst AdminFunctionForm = () => {\n  const [program, setProgram] = useState(\"\");\n  const [event, setEvent] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const [existingPrograms, setExistingPrograms] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n\n  // ✅ Fetch existing Programs and Events for duplicate check\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [programRes, eventRes] = await Promise.all([\n          axios.get(\"/api/programs-events/programs\"),\n          axios.get(\"/api/programs-events/events\"),\n        ]);\n        setExistingPrograms(programRes.data || []);\n        setExistingEvents(eventRes.data || []);\n      } catch (error) {\n        console.error(\"Error fetching existing programs/events:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    // ✅ Check for duplicates before submit\n    if (existingPrograms.some((p) => p.program_name.toLowerCase() === program.toLowerCase())) {\n      setMessage(`⚠️ Program \"${program}\" already exists.`);\n      return;\n    }\n    if (existingEvents.some((ev) => ev.event_name.toLowerCase() === event.toLowerCase())) {\n      setMessage(`⚠️ Event \"${event}\" already exists.`);\n      return;\n    }\n\n    try {\n      await axios.post(\"/api/programs-events/add\", {\n        program_name: program,\n        event_name: event,\n      });\n\n      setMessage(\"✅ Program & Event added successfully!\");\n      setProgram(\"\");\n      setEvent(\"\");\n\n      // Refresh local lists after successful add\n      const [programRes, eventRes] = await Promise.all([\n        axios.get(\"/api/programs-events/programs\"),\n        axios.get(\"/api/programs-events/events\"),\n      ]);\n      setExistingPrograms(programRes.data || []);\n      setExistingEvents(eventRes.data || []);\n\n    } catch (error) {\n      console.error(\"Error adding Program & Event:\", error);\n      setMessage(\"❌ Failed to add Program & Event.\");\n    }\n  };\n\n  return (\n    <div className=\"add-program-container\">\n      <h2>Admin – Create New Program & Event</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Program:</label>\n          <input\n            type=\"text\"\n            value={program}\n            onChange={(e) => setProgram(e.target.value)}\n            required\n            className=\"input-field\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Event:</label>\n          <input\n            type=\"text\"\n            value={event}\n            onChange={(e) => setEvent(e.target.value)}\n            required\n            className=\"input-field\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">\n          Add Program & Event\n        </button>\n      </form>\n\n      {message && <p className=\"form-message\">{message}</p>}\n    </div>\n  );\n};\n\nexport default AdminFunctionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}