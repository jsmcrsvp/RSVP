{"ast":null,"code":"// frontend/src/components/AdminFunctionForm.js\nimport React,{useState,useEffect}from\"react\";import{getAdminPrograms,getAdminEvents}from\"../api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminFunctionForm=()=>{const[programName,setProgramName]=useState(\"\");const[eventName,setEventName]=useState(\"\");const[programs,setPrograms]=useState([]);const[events,setEvents]=useState([]);const[loading,setLoading]=useState(false);const[message,setMessage]=useState(\"\");// Fetch existing Programs & Events\nuseEffect(()=>{const fetchData=async()=>{try{const programs=await getAdminPrograms();const events=await getAdminEvents();setPrograms(programs);setEvents(events);}catch(error){console.error(\"Error fetching existing programs/events:\",error);}};fetchData();},[]);// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();setLoading(true);setMessage(\"\");try{const res=await fetch(\"/api/programs-events\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({program_name:programName,event_name:eventName})});if(!res.ok)throw new Error(\"Failed to save\");const data=await res.json();setMessage(data.message||\"Saved successfully!\");// Refresh lists after saving\nif(programName){setPrograms(prev=>[{program_name:programName,_id:Date.now()},...prev]);}if(eventName){setEvents(prev=>[{event_name:eventName,_id:Date.now()},...prev]);}// Reset fields\nsetProgramName(\"\");setEventName(\"\");}catch(err){console.error(\"Error adding Program & Event:\",err);setMessage(\"❌ Error saving Program/Event\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"1rem\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin: Add Program & Event\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Program Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:programName,onChange:e=>setProgramName(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Event Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:eventName,onChange:e=>setEventName(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?\"Saving...\":\"Save\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Existing Programs\"}),/*#__PURE__*/_jsx(\"ul\",{children:programs.map(p=>/*#__PURE__*/_jsx(\"li\",{children:p.program_name},p._id))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Existing Events\"}),/*#__PURE__*/_jsx(\"ul\",{children:events.map(e=>/*#__PURE__*/_jsx(\"li\",{children:e.event_name},e._id))})]});};export default AdminFunctionForm;","map":{"version":3,"names":["React","useState","useEffect","getAdminPrograms","getAdminEvents","jsx","_jsx","jsxs","_jsxs","AdminFunctionForm","programName","setProgramName","eventName","setEventName","programs","setPrograms","events","setEvents","loading","setLoading","message","setMessage","fetchData","error","console","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","program_name","event_name","ok","Error","data","json","prev","_id","Date","now","err","style","padding","children","onSubmit","type","value","onChange","target","disabled","map","p"],"sources":["/Users/tejas.shah/Downloads/jsmcrsvp/frontend/src/components/AdminFunctionForm.js"],"sourcesContent":["// frontend/src/components/AdminFunctionForm.js\nimport React, { useState, useEffect } from \"react\";\nimport { getAdminPrograms, getAdminEvents } from \"../api\";\n\nconst AdminFunctionForm = () => {\n  const [programName, setProgramName] = useState(\"\");\n  const [eventName, setEventName] = useState(\"\");\n  const [programs, setPrograms] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  // Fetch existing Programs & Events\n\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n      const programs = await getAdminPrograms();\n      const events = await getAdminEvents();\n      setPrograms(programs);\n      setEvents(events);\n    } catch (error) {\n      console.error(\"Error fetching existing programs/events:\", error);\n    }\n  };\n\n  fetchData();\n}, []);\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(\"\");\n\n    try {\n      const res = await fetch(\"/api/programs-events\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          program_name: programName,\n          event_name: eventName,\n        }),\n      });\n\n      if (!res.ok) throw new Error(\"Failed to save\");\n\n      const data = await res.json();\n\n      setMessage(data.message || \"Saved successfully!\");\n\n      // Refresh lists after saving\n      if (programName) {\n        setPrograms((prev) => [{ program_name: programName, _id: Date.now() }, ...prev]);\n      }\n      if (eventName) {\n        setEvents((prev) => [{ event_name: eventName, _id: Date.now() }, ...prev]);\n      }\n\n      // Reset fields\n      setProgramName(\"\");\n      setEventName(\"\");\n    } catch (err) {\n      console.error(\"Error adding Program & Event:\", err);\n      setMessage(\"❌ Error saving Program/Event\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <h2>Admin: Add Program & Event</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Program Name:</label>\n          <input\n            type=\"text\"\n            value={programName}\n            onChange={(e) => setProgramName(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Event Name:</label>\n          <input\n            type=\"text\"\n            value={eventName}\n            onChange={(e) => setEventName(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Saving...\" : \"Save\"}\n        </button>\n      </form>\n\n      {message && <p>{message}</p>}\n\n      <hr />\n\n      <h3>Existing Programs</h3>\n      <ul>\n        {programs.map((p) => (\n          <li key={p._id}>{p.program_name}</li>\n        ))}\n      </ul>\n\n      <h3>Existing Events</h3>\n      <ul>\n        {events.map((e) => (\n          <li key={e._id}>{e.event_name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminFunctionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}